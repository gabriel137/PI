@section head
{
  <script src="/Scripts/handlebars-v1.3.0.js"></script>
  <style>
    .panel {
      margin: 0 auto;
      width: 130px;
      height: 130px;
      position: relative;
      font-size: .8em;
      -webkit-perspective: 600px;
      -moz-perspective: 600px;
    }
    /* -- make sure to declare a default for every property that you want animated -- */
    /* -- general styles, including Y axis rotation -- */
    .panel .front {
      position: absolute;
      top: 0;
      z-index: 900;
      width: inherit;
      height: inherit;
      text-align: center;
      -webkit-transform: rotateX(0deg) rotateY(0deg);
      -webkit-transform-style: preserve-3d;
      -webkit-backface-visibility: hidden;
      -moz-transform: rotateX(0deg) rotateY(0deg);
      -moz-transform-style: preserve-3d;
      -moz-backface-visibility: hidden;
      /* -- transition is the magic sauce for animation -- */
      -o-transition: all .4s ease-in-out;
      -ms-transition: all .4s ease-in-out;
      -moz-transition: all .4s ease-in-out;
      -webkit-transition: all .4s ease-in-out;
      transition: all .4s ease-in-out;
    }

    .panel.flip .front {
      z-index: 900;
      -webkit-transform: rotateY(180deg);
      -moz-transform: rotateY(180deg);
    }

    .panel .back {
      position: absolute;
      top: 0;
      z-index: 800;
      width: inherit;
      height: inherit;
      -webkit-transform: rotateY(-180deg);
      -webkit-transform-style: preserve-3d;
      -webkit-backface-visibility: hidden;
      -moz-transform: rotateY(-180deg);
      -moz-transform-style: preserve-3d;
      -moz-backface-visibility: hidden;
      /* -- transition is the magic sauce for animation -- */
      -o-transition: all .4s ease-in-out;
      -ms-transition: all .4s ease-in-out;
      -moz-transition: all .4s ease-in-out;
      -webkit-transition: all .4s ease-in-out;
      transition: all .4s ease-in-out;
    }

    .panel.flip .back {
      z-index: 1000;
      -webkit-transform: rotateX(0deg) rotateY(0deg);
      -moz-transform: rotateX(0deg) rotateY(0deg);
    }
  </style>
}

<script id="card-template" type="text/x-handlebars-template">
  <div class="row">
    {{#each Pieces}}
            <div id="{{Name}}" class="hover panel col-lg-2">
              <div class="front">
                <div class="pad">
                  <img src="/content/img/front.jpg" width="130" height="130" alt="logo front" />
                </div>
              </div>
              <div class="back">
                <div class="pad">
                  <img src="/content/img/back.jpg" width="130" height="130" alt="logo back" />
                </div>
              </div>
            </div>
    {{#endRow @@index}}
  </div>
  <div class="row">
    {{/endRow}}
        {{/each}}
  </div>
</script>

<script type="text/javascript">
  $(function () {

    Handlebars.registerHelper('endRow', function (conditional, options) {
      if ((conditional + 1) % 5 == 0 && conditional > 0) {
        return options.fn(this);
      }
      return "";
    });

    var game = { Pieces: new Array() };

    game.Pieces[0] = { Name: 'card-1' };
    game.Pieces[1] = { Name: 'card-2' };
    game.Pieces[2] = { Name: 'card-3' };
    game.Pieces[3] = { Name: 'card-4' };
    game.Pieces[4] = { Name: 'card-5' };
    game.Pieces[5] = { Name: 'card-6' };
    game.Pieces[6] = { Name: 'card-7' };
    game.Pieces[7] = { Name: 'card-8' };
    game.Pieces[8] = { Name: 'card-9' };
    game.Pieces[9] = { Name: 'card-10' };
    game.Pieces[10] = { Name: 'card-11' };
    game.Pieces[11] = { Name: 'card-12' };
    game.Pieces[12] = { Name: 'card-13' };
    game.Pieces[13] = { Name: 'card-14' };
    game.Pieces[14] = { Name: 'card-15' };

    var template = Handlebars.compile($("#card-template").html());
    $("#board").html(template(game));


    $('.hover').click(function () {
      var card = $(this);
      if (!card.hasClass('flip')) {
        card.addClass('flip');
      } else {
        card.removeClass('flip');
      }
    });
  });


</script>

<div class="container" id="board"></div>

